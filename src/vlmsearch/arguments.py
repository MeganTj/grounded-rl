import argparse

def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--seed", type=int, default=42)
    parser.add_argument("--model", type=str, default="qwen2_vl")
    parser.add_argument("--judge", type=str, default="gpt4o", choices=["gpt4o", "point_match", "string_match", "point_in_bbox", "web_action"])
    parser.add_argument("--search_method", type=str, default="dfs")
    parser.add_argument("--max_depth", type=int, default=10)
    parser.add_argument("--n_rollouts", type=int, default=3)
    # parser.add_argument("--c_puct", type=float, default=1.41)
    parser.add_argument("--c_puct", type=float, default=2.0)
    parser.add_argument("--data_files", type=str, default="")
    parser.add_argument("--image_root", type=str, default="")
    parser.add_argument("--temperature", type=float, default=1.0)
    parser.add_argument("--top_p", type=float, default=0.95)
    parser.add_argument("--top_k", type=int, default=10)
    parser.add_argument("--max_new_tokens", type=int, default=2048)
    parser.add_argument("--examples", type=str, default=None)
    parser.add_argument("--thought_token_begin", type=str, default="<think>")
    parser.add_argument("--thought_token_end", type=str, default="</think>")
    parser.add_argument("--final_token_begin", type=str, default="<answer>")
    parser.add_argument("--final_token_end", type=str, default="</answer>")
    parser.add_argument("--save_rollouts", action="store_true", default=False)
    parser.add_argument("--save_rollouts_dir", type=str, default="data/rollouts")
    parser.add_argument("--add_thought_number_system_prompt", action="store_true", default=False)
    parser.add_argument("--generate_cold_start", default=False)
    parser.add_argument("--num_processes", type=int, default=1)
    parser.add_argument("--do_data_checkpoint", action="store_true", default=False)
    parser.add_argument("--checkpoint_interval", type=int, default=100)
    parser.add_argument("--pretrained", type=str, default="Qwen/Qwen2-VL-7B-Instruct")
    parser.add_argument("--max_samples", type=int, default=None)
    parser.add_argument("--generate_upfront", action="store_true", default=False)
    parser.add_argument("--point_matching_threshold", type=float, default=50)
    parser.add_argument("--rollout_no_thinking", action="store_true", default=False)
    parser.add_argument("--system_prompt", type=str, default="You are a helpful assistant.")
    parser.add_argument("--first_rollout_no_sample", action="store_true", default=False)
    parser.add_argument("--save_tag", type=str, default=None)
    parser.add_argument("--n_simulations", type=int, default=10)
    parser.add_argument("--rollout_max_steps", type=int, default=5)
    parser.add_argument("--n_rollouts_per_node", type=int, default=2)
    parser.add_argument("--num_children_per_expand", type=int, default=3)
    parser.add_argument("--use_python_mp", action="store_true", default=False)
    parser.add_argument("--max_image_side", type=int, default=None)
    parser.add_argument("--max_pixels", type=int, default=None)
    parser.add_argument("--load_folder", type=str, default=None)
    parser.add_argument("--check_for_crop", action="store_true", default=False)
    parser.add_argument("--multicrop", action="store_true", default=False)
    parser.add_argument("--crop_offset", type=int, default=50)
    parser.add_argument("--crop_size", type=int, default=512)
    parser.add_argument("--draw_dot", action="store_true", default=False)
    parser.add_argument("--timeout_seconds", type=int, default=3600)
    parser.add_argument("--load_proposal_folder", type=str, default=None)
    parser.add_argument("--give_crop_feedback", type=bool, default=False)
    parser.add_argument("--repetition_penalty", type=float, default=1.05)
    
    return parser.parse_args()
